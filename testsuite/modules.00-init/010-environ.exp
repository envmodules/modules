##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.00-init/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	initialization of the shell environment
#   Command:
#   Sub-Command:
#
#   Comment:	%C{
#			First time initialization: Remove everything from
#                       environment, that depends on the module package.
#			Select the 'empty' modulerc file
#		}C%
#
##############################################################################

if {$verbose} {
    send_user "\tInitializing the modulecmd environment ...\n"
}

# clear testsuite-related variables
foreach var [concat [array names env -glob TESTSUITE_*]\
    [list TESTSUITE TS0 TS1 TS2 TS3 TS4 TS4 TS6 TS7 TS8 TS9]] {
    # preserve variable externally set to configure testsuite run
    if {$var ni {TESTSUITE_ENABLE_SITECONFIG TESTSUITE_ENABLE_MODULECACHE}} {
        unsetenv_var $var
    }
}

catch {unset env(MODULEPATH)}
catch {unset env(LOADEDMODULES)}
catch {unset env(_LMFILES_)}

catch {unset env(MODULECONTACT)}

catch {unset env(MODULES_RUN_QUARANTINE)}
unsetenv_var MODULES_QUARANTINE_SUPPORT

foreach var [array names env] {
    switch -glob $var {
        __MODULES_SHARE_* - __MODULES_PUSHENV_* - __MODULES_QUAR_* - \
        MODULES_FAMILY_* - MODULES_RUNENV_* - __MODULES_LM* {
            unsetenv_var $var
        }
    }
}

# clean any automated handling mode configuration
unsetenv_var MODULES_AUTO_HANDLING
unsetenv_var MODULES_CONFLICT_UNLOAD
unsetenv_var MODULES_REQUIRE_VIA

# ensure tests are run with implicit requirement enabled
setenv_var MODULES_IMPLICIT_REQUIREMENT 1

# clean any in depth mode configuration
unsetenv_var MODULES_AVAIL_INDEPTH
unsetenv_var MODULES_SPIDER_INDEPTH

# clean any unload match order config
catch {unset env(MODULES_UNLOAD_MATCH_ORDER)}

# clean any implicit default config
catch {unset env(MODULES_IMPLICIT_DEFAULT)}

# clean any search match config
catch {unset env(MODULES_SEARCH_MATCH)}

# clean any set shell startup config
catch {unset env(MODULES_SET_SHELL_STARTUP)}

# ensure shell startup is not set
unsetenv_var ENV
unsetenv_var BASH_ENV

# clean any shells defined to get ksh fpath set
catch {unset env(MODULES_SHELLS_WITH_KSH_FPATH)}
catch {unset env(FPATH)}
catch {unset env(__MODULES_SHARE_FPATH)}

# clean any pager configuration
catch {unset env(LESS)}
catch {unset env(PAGER)}
catch {unset env(MODULES_PAGER)}

# clean any logger configuration
unsetenv_var MODULES_LOGGED_EVENTS
unsetenv_var MODULES_LOGGER

# clean any protected variable configuration
unsetenv_var MODULES_PROTECTED_ENVVARS

# clean any output redirection configuration
unsetenv_var MODULES_REDIRECT_OUTPUT

# ensure tests are run with a regular default verbosity level
setenv_var MODULES_VERBOSITY normal

# ensure tests are run with extended_default disabled by default
setenv_var MODULES_EXTENDED_DEFAULT 0

# clean any advanced version spec config
unsetenv_var MODULES_ADVANCED_VERSION_SPEC

# ensure tests are run with source_cache disabled by default
setenv_var MODULES_SOURCE_CACHE 0

# ensure tests are run with unique_name_loaded disabled by default
setenv_var MODULES_UNIQUE_NAME_LOADED 0

# ensure tests are run with hide_auto_loaded disabled by default
setenv_var MODULES_HIDE_AUTO_LOADED 0

# clean any nearly forbidden days config
unsetenv_var MODULES_NEARLY_FORBIDDEN_DAYS

# clean any tag abbreviation list
unsetenv_var MODULES_TAG_ABBREV

# clear specific tag name color setup
setenv_var MODULES_TAG_COLOR_NAME {}

# clear specific error behavior
setenv_var MODULES_STICKY_PURGE error
setenv_var MODULES_ABORT_ON_ERROR {ml:reload:switch_unload}

# ensure magic cookie is always checked by default
setenv_var MODULES_MCOOKIE_CHECK always

# enable magic cookie version check by default
setenv_var MODULES_MCOOKIE_VERSION_CHECK 1

# ensure expected default output
setenv_var MODULES_AVAIL_OUTPUT {modulepath:alias:dirwsym:sym:tag:variantifspec:key}
setenv_var MODULES_AVAIL_TERSE_OUTPUT {modulepath:alias:dirwsym:sym:tag:variantifspec}
setenv_var MODULES_LIST_OUTPUT {header:idx:variant:sym:tag:key}
setenv_var MODULES_LIST_TERSE_OUTPUT {header}
setenv_var MODULES_SPIDER_OUTPUT {modulepath:alias:dirwsym:sym:tag:variantifspec:via:key}
setenv_var MODULES_SPIDER_TERSE_OUTPUT {modulepath:alias:dirwsym:sym:tag:variantifspec}

# clean any variant config
setenv_var MODULES_VARIANT_SHORTCUT {}

# clean any editor config
unsetenv_var MODULES_EDITOR
unsetenv_var VISUAL
unsetenv_var EDITOR

# clean any linter configuration
unsetenv_var MODULES_TCL_LINTER

# clean any reset sub-command config
unsetenv_var MODULES_RESET_TARGET_STATE

# clean any cache configuration
unsetenv_var MODULES_IGNORE_CACHE
unsetenv_var MODULES_CACHE_BUFFER_BYTES
unsetenv_var MODULES_CACHE_EXPIRY_SECS

# clean any user rc configuration
unsetenv_var MODULES_IGNORE_USER_RC

# clean any additional siteconfig set
catch {unset env(MODULES_SITECONFIG)}

# clean any color configuration
catch {unset env(MODULES_COLORS)}
catch {unset env(MODULES_TERM_BACKGROUND)}
catch {unset env(NO_COLOR)}
catch {unset env(CLICOLOR)}
catch {unset env(CLICOLOR_FORCE)}
# ensure colored output is disabled by default
setenv_var MODULES_COLOR never

# clean any collection configuration
catch {unset env(MODULES_COLLECTION_PIN_VERSION)}
catch {unset env(MODULES_COLLECTION_PIN_TAG)}
catch {unset env(MODULES_COLLECTION_TARGET)}

# clean any versioning configuration
catch {unset env(MODULE_VERSION)}
catch {unset env(MODULE_VERSION_STACK)}

set env(MODULERCFILE) "$env(TESTSUITEDIR)/etc/empty"
set ORIG_MODULERCFILE $env(MODULERCFILE)
catch {unset env(MODULESHOME)}

set ORIG_PATH $env(PATH)

setenv_var HOME $env(TESTSUITEDIR)
set ORIG_HOME $env(HOME)

set ORIG_MODULECMD $MODULECMD

unsetenv_var testsuite

